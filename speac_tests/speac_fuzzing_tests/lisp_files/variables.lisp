


                   ;;;;;COMPUTER MODELS OF MUSICAL CREATIVITY;;;;;
                   ;;;;;            By David Cope            ;;;;;
                   ;;;;;       SPEAC Function/Chapter 7      ;;;;;
                   ;;;;;             COMMON LISP             ;;;;;
                   ;;;;;     variables code to run SPEAC     ;;;;;
                   ;;;;;               function              ;;;;;
                   ;;;;;COMPUTER MODELS OF MUSICAL CREATIVITY;;;;;

;************************
;   System Variables    *
;************************

(defVar *SCORE* () "The variable containing the score object.")
(defVar *NOTATION-EVENTS* () "Where all of the events are kept.")
(defVar *SAVED-NOTATION-EVENTS* () "For undo.")
(defVar *OLD-NOTATION-EVENTS* () "For undo's saving for second undo.")
(defVar *THE-SCORE-NAME* ())
(defVar *NEW-NOTATION-EVENTS* () "Where algorithmic music is stored.")
(defVar *ALGORITHMIC-COMPOSITION* () "Temporary algorithmic music storage.")
(defVar *METER* 4 "Not in use at present.")
(defVar *BEATS* 4 "Per measure")
(defVar *TACTUS* 4 "Gets the beat.")
(defVar *NOTATION-SIZE* 36)
(defVar *QUANTIZE* 1000 "In order to work this must be set to a multiple of 10.")
(defVar *SELECTED-WORKS* () "The work selected for composing or playback.")
(defVar *PROCESS* () "Used in play in order to stop playing.")
(defVar *SELECTED-DATABASES* () "The selected databases.")
(defVar *FONT-SIZE* 36 "Size of font in score.")
(defVar *RHYTHM-OVERVIEW-RATHER-THAN-INHERITED* () "This variable controls whether or not
the program uses an overview of the rhythm or gets it from each object as it's composing.")
(defVar *SWITCH-CHANNELS* () "This variable says whether or not the program uses any channel - t-
or whether it is limited to using only the channels it has currently.")
(defVar *SELECTION* ())
(defVar *SELECT* ())
(defVar *COLLABORATOR* () "If t this variable provides user control of resultant style
   by allowing taste to influence algorithmic decisions via weights in objects.")
(defVar *DIRECTORY-NAME* ())
(defVar *SELECTED-FILE-NAME* ())
(defVar *CURRENT-PAGE-NUMBER* 1)
(defVar *PAGES-WINDOW* ())

;*************************
;   General Variables    *
;*************************

(defVar *TEXTURE-LIST* ())
(defVar *MY-PEN-PATTERNS* ())
(defVar *A-DATABASE-SEQUENCE* ())
(defVar *TEMPORARY-CONTAINER* ())
(defVar *SAVE-THE-SCORE* ())
(defVar *SOURCE* 'score)
(defVar *FILENAME* ())
(defVar *CURRENT-SAVE-FILE-LOCATION* ())
(defVar *PUNISH* .15 "The main collaborator variable.")

;**********************
;   Load Variables    *
;**********************

(defVar *PATH* () "the path for midi load and save functions")
(defVar *TEMPORARY-BUFFER* ())
(defVar *DATA* ())
(defVar *FILE-NAME* ())
(defVar *CHANNELS-CHOICE* ())
(defVar *CURRENT-CHANNEL* 1)
(defVar *THE-DATA* ())
(defVar *SIG-SET* 'auto)

;*************************
;   Compose Variables    *
;*************************

(defVar *COMPOSE-TEST* t)
(defVar *COMPOSE* ())
(defVar *EXTEND-AMOUNT* 1)
(defVar *END-NUMBER* 10)
(defVar *GROUPINGS* ())
(defVar *ONTIMES* ())
;(defVar *EXITS-AND-ENTRANCES* t
;  "This variable determines whether the program gets only new entrances or new entrances AND exits.")
(defVar *VARIATION* 7 "Variable giving the chances of variation.")
(defVar *ROTATE* 7 "Variable giving the chances of voice rotation.")
(defVar *VOICE-MOTIONS* () "A list of all voice motions in the current database.")
(defVar *AVAILABLE-SETS* () "A list of all available sets in the current database.")
(defVar *AVAILABLE-END-NOTES* () "A list of all available start notes in the current database.")
(defVar *LAST-DYNAMIC* () "Used in case dynamics aren't computed.")
(defVar *ALREADY-SET-DBS* () "Used to avoid re-setting the same dbs.")
(defVar *BOUND-SEGMENTS* () "The bound segments of the database.")
(defVar *TIE-THEM* t "This variable determines whether or not the tie marks - * - are removed and
  tied notes created.")
(defVar *VOICE-DIRECTIONS* () "Directions of voices in the database.")
(defVar *CHANNEL-MOTIONS* () "Motions (right in sublist) in the active channels (left in sublist).")
(defVar *WORK* () "The work being created by the program.")
(defVar *BOUND-OBJECTS* () "A list of the different objects that have been bound.")
(defVar *NUMBERS* 0 "Counting variable for creating full set names.")
(defVar *LEXICONS* () "A list of the lexicons that exist for the current database.")
(defVar *GENERALIZED-MOTIONS* () "If t then another voice from *voice-motions* is chosen.")
(defVar *DURATIONS* ())
(defVar *DYNAMIC-MAP* ())
(defVar *TEXTURE-MAP* ())
(defVar *FORM* ())
(defVar *SETS* ())
(defVar *TIMING-TYPE* ())
(defVar *SETS-LEXICONS* ())
(defVar *PC-RULES-GROUPINGS* ())
(defVar *SET-TYPE* ())
(defVar *RANGES* ())
(defVar *TIMING-LEXICONS* ())
(defVar *SCALE* () "as in (60 62 64 66 67 69 71)")
(defVar *SCALE-PROJECTION* () "as in (36 38 40 42 43 45 47 48 50 . . .)")
(defVar *FIRST-TEST* ())
(defVar *SECOND-TEST* ())
(defVar *THIRD-TEST* ())
(defVar *WORK-NAME* ())
(defVar *RESTED-MUSIC* ())
(defVar *TAGGED-MUSIC* ())
(defVar *TIMING-LEXICON-NAME* ())
(defVar *SET-LEXICON-NAME* ())
(defVar *GROUPING-NUMBERS* 0)
(defVar *SET-NUMBERS* 0)
(defVar *SETS* ())
(defVar *ALREADY-SET-WORKS* () "Used to avoid re-setting the same works.")
(defVar *WORK-LEXICONS* ())
(defVar *NEW-WORK-NUMBERS* 0)
(defVar *MY-TEST* () "this is the fresh work before it becomes altered for playback!")
(defVar *TOGGLE* ())
(defVar *STRUCTURE-MUSIC* ())
(defVar *WORK-START-NOTES* ())
(defVar *THE-RULES* ())
(defVar BROKEN-MUS ())
(defVar *PROBLEM* "" "can use in place of backtrace to find problems - indicates via a
  simple window what function the problem occurred in.")
(defVar *BACKFILL-START* 0)
(defVar *BACKFILL-END* 0)
(defVar THE-DATABASE () "Used in backfill as an alias.")
(defVar WORK ())
(defVar *END* ())
(defVar *BACK-FILL-PATH* ())
(defVar *FIND* ())
(defVar *EXTEND-SELECTION* ())
(defVar *REPEAT-PHRASE* ())
(defVar *SELECTED-FROM-DATABASES* ())
(defVar *SELECTED-COMPOSER* ())

;***********************
;   SPEAC Variables    *
;***********************

(defVar STATEMENT ())
(defVar ANTECEDENT ())
(defVar CONSEQUENT ())
(defVar PREPARATION ())
(defVar EXTENSION ())

;**********************
;   Play Variables    *
;**********************

(defVar *PLAY-IT* ())
(defVar *TEMPO* 60)
(defVar *KEY* 0)
(defVar *TIES* "no")
(defVar *LOUD* 55)
(defVar *MY-TEST* ())
(defVar *CHANNEL* 1)
(defVar *INSTR* ())
(defVar *TEMPO-BUTTON* ())
(defVar *KEY-BUTTON* ())
(defVar *LOUD-BUTTON* ())
(defVar *CHANNEL-1* 1)
(defVar *CHANNEL-2* 2)
(defVar *CHANNEL-3* 3)
(defVar *CHANNEL-4* 4)
(defVar *CHANNEL-5* 5)
(defVar *CHANNEL-6* 6)
(defVar *CHANNEL-7* 7)
(defVar *CHANNEL-8* 8)
(defVar *CHANNEL-9* 9)
(defVar *CHANNEL-10* 10)
(defVar *CHANNEL-11* 11)
(defVar *CHANNEL-12* 12)
(defVar *CHANNEL-13* 13)
(defVar *CHANNEL-14* 14)
(defVar *CHANNEL-15* 15)
(defVar *CHANNEL-16* 16)
(defVar *CHANNEL-NO-1* 1)
(defVar *CHANNEL-NO-2* 1)
(defVar *CHANNEL-NO-3* 1)
(defVar *CHANNEL-NO-4* 1)
(defVar *CHANNEL-NO-5* 1)
(defVar *CHANNEL-NO-6* 1)
(defVar *CHANNEL-NO-7* 1)
(defVar *CHANNEL-NO-8* 1)
(defVar *CHANNEL-NO-9* 1)
(defVar *CHANNEL-NO-10* 1)
(defVar *CHANNEL-NO-11* 1)
(defVar *CHANNEL-NO-12* 1)
(defVar *CHANNEL-NO-13* 1)
(defVar *CHANNEL-NO-14* 1)
(defVar *CHANNEL-NO-15* 1)
(defVar *CHANNEL-NO-16* 1)
(defVar *NAME* ())
(defVar *INSTRUMENT* 46)
(defConstant $NOTEOFF #x80)
(defConstant $NOTEON #x90)
(defVar *CURRENT-GESTURES* 'nil)
(defVar *INSTRUMENTS* (make-hash-table)
  "hash table <Instrument-Number> => list: <Allocator> <Channel>")
(defVar *NOTE-ALLOCATOR* nil "the current QuickTime Music note allocator")

;************************
;   Timing Variables    *
;************************

(defVar *DATABASE-TIMING-LEXICONS* ())
(defVar *DATABASE-RANGES* ())
(defVar *DATABASE-SETS* ())
(defVar *DATABASE* ())
(defVar *HISTORY* ())
(defVar *NEW-BEGINING-TIME* 0)
(defVar *END-TIME* 0)
(defVar *BEGIN-BEAT* 1)
(defVar *END-BEAT* 100)
(defVar *BEAT* 1000)
(defVar *BEAT-SIZE-SAVE* 1000)
(defVar *START* 0)
(defVar ST-TIME ())
(setq *end-time* 10000)
(defVar *ENDING-BEAT* 20)
(defVar *BEGINNING-BEAT* 1)
(defVar *TOTAL-BEATS* 21)
(defVar *TARGET-ITEM* ())

;***********************
;   Match Variables    *
;***********************

(defVar *PATTERN-SIZE* 3)
(defVar *MATCHING-LINE* 1)
(defVar *DIFFERENCE* 1)
(defVar *UNIFICATIONS* ())
(defVar *UPPER-THRESHOLD* 6)
(defVar *LOWER-THRESHOLD* 2)
(defVar *HIERARCHICAL* ())
(defVar *SIGNATURES* ())
(defVar *AMOUNT-OF-DEVIATION* 3)
(defVar *NUMBER-OF-OFF-INTERVALS* 2)
(defVar NUMBER-SIGNATURE 0)
(defVar *SIGNATURE-SELECTION* ())
(defVar *SIGNATURE* ())
(defVar *SIGNATURE-LEXICON* ())
(defVar *SIGNATURE-START-NOTES* ())

;************************
;   Clef Coordinates    *
;************************

(defVar PITCH-TO-COORDINATE
  '((0 105 down)(24 245 up) (25 245 up *) (26 240 up) (27 240 up *) (28 235 up) (29 230 up)
    (30 230 up *) (31 225 up) (32 225 up *) (33 220 up) (34 220 up *) (35 215 up)
    (36 210 up) (37 210 up *) (38 205 up) (39 205 up *) (40 200 up) (41 195 up)
    (42 195 up *) (43 190 up) (44 190 up *) (45 185 up) (46 185 up *) (47 180 up)
    (48 175 up) (49 175 up *) (50 170 down) (51 170 down *) (52 165 down)
    (53 160 down) (54 160 down *) (55 155 down) (56 155 down *) (57 150 down)
    (58 150 down *) (59 145 down) (60 140 down) (61 140 up *) (62 135 up)
    (63 135 up *) (64 130 up) (65 125 up) (66 125 up *) (67 120 up) (68 120 up *)
    (69 115 up) (70 115 up *) (71 110 up) (72 105 down) (73 105 down *)
    (74 100 down) (75 100 down *) (76 95 down) (77 90 down) (78 90 down *)
    (79 85 down) (80 85 down *) (81 80 down) (82 80 down *) (83 75 down)
    (84 70 down) (85 70 down *) (86 65 down) (87 65 down *) (88 60 down)
    (89 55 down) (90 55 down *) (91 50 down) (92 50 down *) (93 45 down)
    (94 45 down *)(95 40 down)(96 35 down)(97 35 down *)(98 30 down)
    (99 25 down *)(100 25 down)(101 20 down)(102 25 down *)
    (103 20 down)(r 105 rest)))

(defVar TREBLE-PITCH-TO-COORDINATE
  '((55 85 up) (56 85 up *) (57 80 up) (58 80 up *) (59 75 up) (60 70 up)
    (61 70 up *) (62 65 up) (63 65 up *) (64 60 up) (65 55 up) (66 55 up *)
    (67 50 up) (68 50 up *) (69 45 up) (70 45 up *) (71 40 up) (72 35 down)
    (73 35 down *) (74 30 down) (75 30 down *) (76 25 down) (77 20 down)
    (78 20 down *) (79 15 down) (80 15 down *) (81 10 down) (82 10 down *)
    (83 5 down) (84 0 down)))

(defVar BASS-PITCH-TO-COORDINATE
  '((24 115 up) (25 115 up *) (26 110 up) (27 110 up *) (28 105 up) (29 100 up)
    (30 100 up *) (31 95 up) (32 95 up *) (33 90 up) (34 90 up *) (35 85 up)
    (36 80 up) (37 80 up *) (38 75 up) (39 75 up *) (40 70 up) (41 65 up)
    (42 65 up *) (43 60 up) (44 60 up *) (45 55 up) (46 55 up *) (47 50 up)
    (48 45 up) (49 45 up *) (50 40 up) (51 40 up *) (52 35 down) (53 30 down)
    (54 30 down *) (55 25 down) (56 25 down *) (57 20 down) (58 20 down *)
    (59 15 down) (60 10 down) (61 10 down *) (62 5 down) (63 5 down *) (64 0 down)))

(defVar ALTO-PITCH-TO-COORDINATE
  '((45 85 up) (46 85 up *) (47 80 up) (48 75 up) (49 75 up *) (50 70 up)
    (51 70 up *) (52 65 up) (53 60 up) (54 60 up *) (55 55 up) (56 55 up *)
    (57 50 up) (58 50 up *) (59 45 up) (60 40 down) (61 40 down *) (62 35 down)
    (63 35 down *) (64 30 down) (65 25 down) (66 25 down *) (67 20 down)
    (68 20 down *) (69 15 down) (70 15 down*) (71 10 down) (72 5 down)
    (73 5 down *) (74 0 down)))

(defVar TENOR-PITCH-TO-COORDINATE
  '((41 85 up) (42 85 up *) (43 80 up) (44 80 up *) (45 75 up) (46 75 up *)
    (47 70 up) (48 65 up) (49 65 up *) (50 60 up) (51 60 up *) (52 55 up)
    (53 50 up) (54 50 up *) (55 45 up) (56 45 up *) (57 40 up) (58 40 down *)
    (59 35 down) (60 30 down) (61 30 down *) (62 25 down) (63 25 down *)
    (64 20 down) (65 15 down) (66 15 down *) (67 10 down) (68 10 down *)
    (69 5 down) (70 5 down *)))

;***********************
;   Score Variables    *
;***********************

(defVar *PAGE-WIDTH* 8.5)
(defVar *PAGE-HEIGHT* 11.0)
(defVar *LEFT-MARGIN* .75)
(defVar *RIGHT-MARGIN* .5)
(defVar *FOOTER-MARGIN* 1.0)
(defVar *STAFF-LN-SEPARATION* .126)
(defVar *STAFF-SEPARATION* 1.5)
(defVar *STAFF-LINE-WIDTH* .02)
(defVar *LINE-SEPARATION* 2.0)
(defVar *SYSTEM-SEPARATION* 1.5)
(defVar *CHANNEL-NUMBER-SEPARATION* 80)
(defVar *CHANNEL-SEPARATION* 35)
(defVar *NOTE-HEAD-SIZE* 1)
(defVar *STEM-WIDTH* .025)
(defVar *IDEAL-STEM-LENGTH* .5)
(defVar *DYNAMICS-SIZE* .8)
(defVar *BEAM-SPACING* .26775)
(defVar *BEAM-WIDTH* .14175)
(defVar *REDUNDANT-ACCIDENTALS* ())
(defVar *AUTOMATIC-BEAMS* t)
(defVar *AUTOMATIC-TIES* t)
(defVar *AUTOMATIC-RESTS* t)
(defVar *AUTOMATIC-MEASURE-NUMBERS* ())
(defVar *STAFF-LINE-SEPARATION* 10)
(defVar TRE ())
(defVar STATUS ())
(defVar *CMN-STAFF* ())
(defVar *CMN-PAGE* ())
(defVar *CMN-VIEW* ())
(defVar *WCMN-COUNTER* 0)
(defVar *DELETE* ())
(defVar *CURRENT-MEASURE-EVENTS* ())
(defVar *THE-DURATION* 1000)
(defVar *KEY-CHOICE* 0)
(defVar  *THE-DIMENSION* ())
(defVar *OFFSET* 0)
(defVar *START-TIME-TEXT* ())
(defVar *THE-OCTAVE* 0)
(defVar *COMPOSE-WEIGHTS* ())
(defVar *ONTIME* 0)
(defVar *COMPOSE-WEIGHTS* ())
(defVar *NEW-DYNAMIC* 60)
(defVar *SEQUENCE* ())
(defVar *ITEM-CHOICE* ())
(defVar VIEW ())
(defVar *THE-DYNAMIC* ())
(defVar *THE-NOTE* 68)
(defVar *NOTE-NAME* "a")
(defVar *MY-BUFFER-2*  ())
(defVar *NOTE-NAME-TEXT* ())
(defVar *THE-START* 1)
(defVar *THE-BEAT* 1000)
(defVar *NEW-DATABASE* ())
(defVar *NEW-WORKS* ())
(defVar *WORKS-SEQUENCE* ())
(defVar *TEMP-NEW-DATABASE* ())
(defVar *MODE* 'major)
(defVar *CORRECTED-EVENT* ())
(defVar *PAGES* ())

;************************
;   Interval Weights    *
;************************
#|
(defVar *INTERVAL-LIST* '(*unison* *minor-second* *major-second* *minor-third* *major-third*
                             *perfect-fourth* *augmented-fourth* *perfect-fifth* *minor-sixth*
                             *major-sixth* *minor-seventh* *major-seventh* *perfect-octave* *minor-ninth*
                             *major-ninth* *minor-tenth* *major-tenth* *perfect-eleventh*
                             *augmented-eleventh* *perfect-twelveth* *minor-thirteenth* *major-thirteenth*
                             *minor-fourteenth* *major-fourteenth* *perfect-fifteenth* *minor-sixteenth*
                             *major-sixteenth* *minor-seventeenth* *major-seventeenth* *perfect-eighteenth*
                             *augmented-eighteenth* *perfect-nineteenth* *minor-twentieth*
                             *major-twentieth* *minor-twentyfirst* *major-twentyfirst*
                             *perfect-twentysecond* *minor-twentythird* *major-twentythird*
                             *minor-twentyfourth* *major-twentyfourth* *perfect-twentyfifth*
                             *augmented-twentyfifth* *perfect-twentysixth* *minor-twentyseventh*
                             *major-twentyseventh* *minor-twentyeighth* *major-twentyeighth*
                             *perfect-twentyninth*))
|#
(defVar *AMT* .001 "the amount of weight added due to the pitch of the bass note")
(defVar *PERCENTAGE* .5 "the amount of weight to be added due to intervals between bass notes")

#|(defVar *UNISON* 0)
(defVar *MINOR-SECOND* 1)
(defVar *MAJOR-SECOND* .8)
(defVar *MINOR-THIRD* .225)
(defVar *MAJOR-THIRD* .2)
(defVar *PERFECT-FOURTH* .55)
(defVar *AUGMENTED-FOURTH* .65)
(defVar *PERFECT-FIFTH* .1)
(defVar *MINOR-SIXTH* .275)
(defVar *MAJOR-SIXTH* .25)
(defVar *MINOR-SEVENTH* .7)
(defVar *MAJOR-SEVENTH* .9)
(defVar *PERFECT-OCTAVE* 0)
(defVar *MINOR-NINTH* .95)
(defVar *MAJOR-NINTH* .74)
(defVar *MINOR-TENTH* .175)
(defVar *MAJOR-TENTH* .15)
(defVar *PERFECT-ELEVENTH* .5)
(defVar *AUGMENTED-ELEVENTH* .6)
(defVar *PERFECT-TWELVETH* .05)
(defVar *MINOR-THIRTEENTH* .225)
(defVar *MAJOR-THIRTEENTH* .2)
(defVar *MINOR-FOURTEENTH* .65)
(defVar *MAJOR-FOURTEENTH* .85)
(defVar *PERFECT-FIFTEENTH* 0)
(defVar *MINOR-SIXTEENTH* .925)
(defVar *MAJOR-SIXTEENTH* .725)
(defVar *MINOR-SEVENTEENTH* .175)
(defVar *MAJOR-SEVENTEENTH* .125)
(defVar *PERFECT-EIGHTEENTH* .475)
(defVar *AUGMENTED-EIGHTEENTH* .575)
(defVar *PERFECT-NINETEENTH* .025)
(defVar *MINOR-TWENTIETH* .2)
(defVar *MAJOR-TWENTIETH* .175)
(defVar *MINOR-TWENTYFIRST* .625)
(defVar *MAJOR-TWENTYFIRST* .825)
(defVar *PERFECT-TWENTYSECOND* 0)
(defVar *MINOR-TWENTYTHIRD* .91)
(defVar *MAJOR-TWENTYTHIRD* .71)
(defVar *MINOR-TWENTYFOURTH* .135)
(defVar *MAJOR-TWENTYFOURTH* .11)
(defVar *PERFECT-TWENTYFIFTH* .46)
(defVar *AUGMENTED-TWENTYFIFTH* .56)
(defVar *PERFECT-TWENTYSIXTH* .01)
(defVar *MINOR-TWENTYSEVENTH* .185)
(defVar *MAJOR-TWENTYSEVENTH* .16)
(defVar *MINOR-TWENTYEIGHTH* .61)
(defVar *MAJOR-TWENTYEIGHTH* .81)
(defVar *PERFECT-TWENTYNINTH* 0)
(defVar *OCTAVE* .9)
|#

;***********************
;   Scale Variables    *
;***********************

(defVar *SCALES* '(((2 2 1 2 2 2) major)
                     ((2 1 2 2 1 2) nat-minor)
                     ((2 1 2 2 1 3) harm-minor)
                     ((2 1 2 2 2 1) dorian)
                     ((1 2 2 2 1 2) phrygian)
                     ((2 2 2 1 2 2) lydian)
                     ((2 2 1 2 2 1) mixolydian)
                     ((1 2 2 1 2 2) locrian)
                     ((2 1 2 1 2 1 2) maj-octatonic)
                     ((1 2 1 2 1 2 1) min-octatonic)
                     ((2 2 2 2 2) whole-tone)
                     ((2 3 2 2 *) pentatonic)
                     ((1 2 2 2 1 3) spanish)
                     ((2 1 3 1 2 1) oriental-bartok)
                     ((1 4 1 2 *) pelog)
                     ((2 3 2 3 *) slendro)
                     ((2 1 1 1 2 1 1 1 1) polytonal)
                     ((2 2 1 2 1 3) harmonic-major)
                     ((1 1 1 1 1 1 1) chromatic)))
(defVar *SCALE-INFO* ())
(defVar *KEY-SIGNATURE* 'sharp)
(defVar *SHARP-MAJOR-KEYS* '(c g d a e b))
(defVar *SHARP-MINOR-KEYS* '(a e b))

;*********************
;   Set Variables    *
;*********************

(defVar NOTES '(c db d eb e f gb g ab a bb b))
(defVar *SET* ())
(defVar *GENERATION* ())

(defVar *CHAN-1* ())
(defVar *CHAN-2* ())
(defVar *CHAN-3* ())
(defVar *CHAN-4* ())
(defVar *CHAN-5* ())
(defVar *CHAN-6* ())
(defVar *CHAN-7* ())
(defVar *CHAN-8* ())
(defVar *CHAN-9* ())
(defVar *CHAN-10* ())
(defVar *CHAN-11* ())
(defVar *CHAN-12* ())
(defVar NOTE1 ())
(defVar NOTE2 ())
(defVar NOTE3 ())
(defVar NOTE4 ())
(defVar NOTE5 ())
(defVar NOTE6 ())
(defVar NOTE7 ())
(defVar NOTE8 ())
(defVar NOTE9 ())
(defVar NOTE10 ())
(defVar NOTE11 ())
(defVar NOTE12 ())

;************************
;   Window Variables    *
;************************

(defVar *VARIABLES-WINDOW* ())
(defVar *INPUT-WINDOW* () "The input window.")
(defVar *SCORE-WINDOW* ())
(defVar *SCORE-FLOATING-WINDOW* ())
(defVar *EXTEND-WINDOW* ())
(defVar *VARIABLE-WINDOW* ())
(defVar *LOAD-WINDOW* ())
(defVar *ANALYSIS-WINDOW* ())
(defVar *PATTERN-WINDOW* ())
(defVar *SPEAC-WINDOW* ())
(defVar *STRUCTURE-WINDOW* ())
(defVar *INPUT-WINDOW-CHOICE* 'duplets)
(defVar *WINDOW* () "a variable to close the window if previously left out")
(defVar *WINDOW-FILENAME* ())
(defVar *FLOATING-WINDOID* () "The floating windoid.")
(defVar *BAR-WINDOW* ())
(defVar *PIE1* ())
(defVar *PIE2* ())
(defVar *PIE3* ())
(defVar *PIE4* ())
(defVar *PIE5* ())
(defVar *PLAY-VARIABLE-WINDOW* ())
(defVar *PIE-WIND* ())
(defVar *SCATTER-WIND* ())
(defVar *LINE-WIND* ())
(defVar *COLUMN-WIND* ())
(defVar *TEXT-ITEM-TEXT* "stuff")
(defVar *SELECT-LIST* ())
(defVar *REGION-BUTTON* ())
(defVar *CHORD-BUTTON* ())
(defVar *TEMPO-BUTTON* ())
(defVar *TEXT-ITEM-TEXT* "stuff")
(defVar *PIE* ())
(defVar *SIGNATURE-SELECTION* ())
(defVar *VIEW-SCROLL-OFFSET* () "Offsets the popints by the scroll setting")
(defVar *NEW* ())
(defVar *TEXT* ())
(defVar *CLEF* t)
(defVar DUMMY () "A simple mask for the analysis window's regionizing.")
(defVar *SCORE-VARIABLES-WINDOW* ())
(defVar *PLAY-WINDOW* ())
(defVar *BACKFILL-WINDOW* ())
(defVar *PROGRAM-WINDOW* ())
(defVar *FORM-WINDOW* ())
(defVar *MAPING-WINDOW* ())
(defVar *PAGE-WINDOW* ())
(defVar *MARGIN-WINDOW* ())
(defVar *STAFF-WINDOW* ())
(defVar *SYSTEM-WINDOW* ())
(defVar *SIZE-VARIABLES-WINDOW* ())
(defVar *DEFAULT-VARIABLES-WINDOW* ())
(defVar *PROGRAM-VARIABLES-WINDOW* ())
(defVar *RISK-WINDOW* ())
(defVar *QUANTIZE-VARIABLES-WINDOW* ())
(defVar *ANALYSIS-VARIABLES-WINDOW* ())
(defVar *MATCH-WINDOW* ())
(defVar *MATCH-VARIABLE-WINDOW* ())
(defVar *EARMARK-VARIABLE-WINDOW* ())
(defVar *UNIFICATIONS-SIGNATURES-WINDOW* ())
(defVar *UNIFICATION-VARIABLE-WINDOW* ())
(defVar *AMT-WINDOW* ())
(defVar *BACKFILL-DEFINE-WINDOW* ())
(defVar *REGION-WINDOW* ())
(defVar *HELP-WINDOW* ())
(defVar *MEASURE-CHOICE* ())
(defVar *STAFF-CHOICE* t)
(defVar *FORM-SELECTION-WINDOW* ())
(defVar *COLOR* t)
(defVar *WINDOW-CHOICE* 'lisp)
(defVar *LIST-OF-FILES* '(disclaimer introduction setup midi layout main-palette input
                          score-palette analysis patterns maps-and-plots structure variables
                          compose))
(defVar *ENTRANCE-POINT* ())
(defVar *ORIGINAL-MUSIC* ())
(defVar *CHANNEL-RANGES* ())
(defVar *PREVIOUS-LOADING* ())
(defVar *EXTENDABLE-EVENTS* ())
(defVar *FIRST-CHORD* ())
(defVar *CHANNEL-RANGES* () "This is a quick and dirty ranger.")
(defVar TIMING 0)
(defVar NEW-CHORD-DESTINATION ())
(defVar NEWLY-CREATED-CHORD ())
(defVar REPLACEMENT-CHORD ())
(defVar SEGMENT ())
(defVar BOUND-SEGMENTS ())
(defVar ALREADY-SET-DBS ())
(defVar FIRST-CHORD ())
(defVar FIRST-CHORDS-LEXICON ())
(defVar DESTINATIONS ())
(defVar NEW-CHORD-VERSION ())
(defVar LEXICON-NAME ())
;(defVar SIMULTANEOUS-EVENTS ())
(defVar REVISED-SIMULTANEOUS-EVENTS ())
;(defVar NEW-ENTRANCE-TIME ())
(defVar ORDERED-EVENTS ())
(defVar EVENTS ())
(defVar BOUND-OBJECTS ())
(defVar TEMPORARY-STORAGE ())
(defVar NUMBERS 0)
(defVar LEXICONS ())
;(defVar EVENT ())
(defVar FIRST-CHORD-SET t)
(defVar THE-NOTE-TO-REMOVE-FROM-SUBSTITUTE-BEGIN-NOTES ()
  "this is the note that needs to be removed from the substitute notes")
(defVar NOTE-NUMBERS '(24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
                       52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
                       80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
                       106 107 108))
(defVar NOTE-NAMES '(c db d eb e f gb g ab a bb b c db d eb e f gb g ab a bb b c db d
                     eb e f gb g ab a bb b c db d eb e f gb g ab a bb b c db d eb e f
                     gb g ab a bb b c db d eb e f gb g ab a bb b c db d eb e f gb g ab a bb b))
(defVar LAST-EVENT ())
(defVar TIE-EVENT? ())
(defVar *EXTEND* ())
(defVar *COPY-BEGIN-TIME* 1)
(defVar *COPY-END-TIME* 4)
(defVar *PASTE-BEGIN-TIME* 1)
(defVar *PASTE-END-TIME* 4)
(defVar ALL ())
(defVar SELECT t)
(defVar ALL1 ())
(defVar SELECT1 t)
(defVar *ALL* ())
(defVar *SEL* t)
(defVar *ALLQ* ())
(defVar *SELQ* t)
(defVar *CHANNEL-COPY* 1)
(defVar *CHANNEL-PASTE* 1)
(defVar *COPY* ())
(defVar *SAVE-COPY* ())
(defVar *RANGE-CONTROL* t)

;*****************************
;   Edit Window Variables    *
;*****************************

(defVar *CONTAINER* ())
(defVar *THE-POSITION-IN-ARRAY* ())
(defVar *ARRAY-DIALOG* ())
(defVar OUT1 ())
(defVar BEAT ())
(defVar END-P ())
(defVar *TEMPORARY-MASTER* () "For use in convert-file-to-points.")
(defVar I ())
(defVar ON1 ())
(defVar ONT1 ())
(defVar *NOTE-CHOICE* t "Determines whether the action creates a note.")
(defVar *REMOVED-POINT* ())
(defVar *TEXT* "Okay")
(defVar *REMOVE* () "Determines whether the action will create or remove a notation.")
(defVar *VERY* ())
(defVar *TEMPORARY-NAME-LIST* ())
(defVar *NAME* ())
(defVar *VERTICAL* ())
(defVar *HORIZONTAL* ())
(defVar *MUSIC* ())
(defVar *RESTS* ())
(defVar *MINIATURE* ())
(defVar *FORM-ELEMENTS* ())
(defVar *LENGTHS* ())
(defVar *FORM* t)
(defVar *RHYTHM* ())
(defVar *RECT-SIZE* ())
(defVar *RECT-POSITION* ())
(defVar *THE-WORK* ())
(defVar *TEMPORARY-NAME* ())
(defVar *TITLE* ())
(defVar *WORK-LIST* ())
(defVar *BEGIN-TIME-IN-MEASURES* 1)
(defVar *BEGIN-TIME-IN-BEATS* 1)
(defVar *END-TIME-IN-MEASURES* 100)
(defVar *END-TIME-IN-BEATS* 100)
(defVar AUGMENT-BY-12 ())
(defVar *EDITOR* ())
(defVar *EVENT-PART* ())
(defVar *SEPARATION-BETWEEN-STAVES* 80)
(defVar *SEPARATION-BETWEEN-CLEFS* 80)
(defVar *SEPARATION-BETWEEN-METER* 55)
(defVar *TOP-CLEF-POSITION* 20)
(defVar *BOTTOM-CLEF-POSITION* 40)
(defVar *TREBLE-CLEF-POSITION* 39)
(defVar *BASS-CLEF-POSITION* 21)
(defVar *EDIT-CHECK* ())
(defVar *EDIT-CHOICE* () "Determines whether or not the action will allow editing of an event.")
(defVar *CHANNEL-NUMBER-SEPARATION* 80)
(defVar *COORDINATES* ())
(defVar *ADD* t)
(defVar *REPLACE* ())
(defVar *ACCIDENTAL-CHOICE* 'natural "The accidental choice.")
(defVar *THE-EVENT* ())
(defVar *TEST* 0 "A kludge to ensure the extra bar number does not get printed.")
(defVar *TIES-POINT-LIST* ())
(defVar *TIED-SCORE* ())
(defVar *MY-CHANNEL-CHOICE* 1)
(defVar *THE-CHANNEL* 1 "The channel selection.")
(defVar *DUR* 'eighth "The current duration.")
(defVar STAFF ())

;******************************
;   Input Window Variables    *
;******************************

(defVar *CLEF-AND-METER-POINTS* '((("2" "") 6553655) (("4" "") 7864375) (("?" "") 7798809))
  "This is where the vertical and horizontal
   points of the clef and meter are stored.")
(defVar *DYNAMIC* ())
(defVar *ADD-BUTTON* t)
(defVar *ADD-TYPE* 'add)
(defVar *REMOVE-BUTTON* ())
(defVar *TIE-CHECK* ())
(defVar *TIE-CHOICE* ())
(defVar *NOTE-POINTS* ())
(defVar *SOFT-VERTICAL-LINES* 1277 "This determines how far into the score the
  soft vertical lines go.")
(defVar *HARD-VERTICAL-LINES* 1225 "This determines how far into the score the
  soft vertical lines go.")
(defVar *STAFF-LINES* 11380 "This determines how far the staff lines go into the score.")
(defVar *POINT* () "The newly created point by clicking the mouse.")
(defVar *POINTS* () "Where the note points are stored.")
(defVar *MASTER-POINTS* () "where all of the points are stored.")
(defVar *MASTER-TEMPORARY-CONTAINER* ())
(defVar *REMOVED-EVENT-STORAGE* ())
(defVar *MASTER-NOTATION-EVENTS* ())
(defVar *NEW-WORK* ())
(defVar *BARLINES* () "This creates the barline measurements.")
(defVar *BARNUMBERS* 1 "This begins the var numbering sequence.")
(defVar *STORED-TIE-POINTS* () "Where the tie points are stored.")
(defVar *DYNAMIC-POINT-LIST* () "Where the dynamic points are kept.")
(defVar *DYNAMIC-POINT* () "The current dynamic point is stored here.")
(defVar *CHOSEN-STAFF* 1)
(defVar *SAVE-THE-SCORE* ())
(defVar *DOT-BUTTON* ())
(defVar *UP-LEDGER-LINE* 10)
(defVar *SCORE-NAME* ())
(defVar *SCORE-PAGE* ())
(defVar *OUTPUT-TYPE* :quickdraw)
(defVar *FULL-LAST-LINE* nil)
(defVar *PRINT-NAME* "name")
(defVar *PREVIEW-WINDOW* ())
(defVar *DOWN-LEDGER-LINE* -10)
(defVar PITCH-TO-COORDINATE ())
(defVar *THE-NATURAL-BUTTON* ())
(defVar *NATURAL-BUTTON* ())
(defVar *FLAT-BUTTON* ())
(defVar *SHARP-BUTTON* ())
(defVar *DYNAMIC-CHECK* ())
(defVar *DYNAMIC-CHOICE* 'mp)
(defVar *TIE-CHECK* ())
(defVar *DURATION-CHOICE* 'eighth "Decided by the radio buttons on the windoid.")
(defVar *DYN-CHOICE* () "Whether or not the action will create a dynamic instead of a note.")
(defVar *CHANNELS* ())
(defVar *VISIBLE-CHANNELS* ())
(defVar *NOTE-BOX-CHECK* ())
(defVar *A-POINT* ())
(defVar *DOT* () "The dot variable.")
(defVar *ACCIDENTAL* 'natural)
(defVar *DURATION* 'eighth)
(defVar SUBSCRIPT ())
(defVar *MEASURE* 1)
(defVar *INPUT-STAFF-SEPARATION* 40)
(defVar *LEVEL-TWO* ())
(defVar *LEVEL-THREE* ())
(defVar *TYPE* 'note)
(defVar *NOTE-TYPE* ())
(defVar *ARTICULATION* ())
(defVar *ARTICULATION-TYPE* 'accent)
(defVar *DURAT* ())
(defVar *ART-CHOICE* ())
(defVar *ARTICULATION-CHOICE* 'staccato)
(defVar *NOTATION-SYMBOL* ())
(defVar *WHERE-I-AM* ())

;*************************
;   Match Winodw Vars    *
;*************************

(defVar *LOWER-THRES* 1)
(defVar *LOWER-THR* ())
(defVar *MATCHING-LIN* ())
(defVar *DIF* ())
(defVar *NUMBER-OF-OF* ())
(defVar *UPPE* ())
(defVar *AMOUNT-OF-DEV* ())
(defVar *PATTER* ())
(defVar *PATTERN-SIZE-SAVE* 3)
(defVar *AMOUNT-OF-DEVIATION-SAVE* 3)
(defVar *UPPER-THRESHOLD-SAVE* 6)
(defVar *NUMBER-OF-OFF-INTERVALS-SAVE* 2)
(defVar *DIFFERENCE-SAVE* 1)
(defVar *MATCHING-LINE-SAVE* 1)
(defVar *LOWER-THRESHOLD-SAVE* 2)
(setq number-signature 0)
(setq *end-beat* 100)
(setq *begin-beat* 1)
(defVar *MATCH-SELECTIONS* ())

;*********************
;   Earmarks Vars    *
;*********************

(defVar *BREAK-POINT-SAVE* 5)
(defVar *PATTERN-SIZE-TOP-SAVE* 7)
(defVar *THRESHOLD-SAVE* 1)
(defVar *AMOUNT-OFF-TOP-SAVE* 5)
(defVar *INTERVALS-OFF-TOP-SAVE* 5)
(defVar *START-SAVE* 0)
(defVar *MATCHING-LINE-SAVE* 1)
(defVar *RESULTS* ())
(defVar *SELECTED-RESULTS* ())
(defVar NUMBER-WORK 1)
(defVar *PATTERN-SIZE-BOTTOM* 7)
(defVar *PATTERN-SIZE-TOP* 7)
(defVar *INTERVALS-OFF-TOP* 5)
(defVar *AMOUNT-OFF-TOP* 5)
(defVar *BREAK-POINT* 5)
(defVar *INTERVALS-OFF-BOTTOM* 1)
(defVar *AMOUNT-OFF-BOTTOM* 1)
(defVar *INTERVALS-OFF* 1 "this variable represents the number of intervals off for matching.
 used in pattern-match-works.")
(defVar *AMOUNT-OFF* 2 "this variable is the amount off variable for matching. used in pattern-match.")
(defVar *THRESHOLD* 1 "this variable controls how many matches must occur in order to count as a match.
 it is found in the variables window of the match window.")

;*****************************
;   Unification Variables    *
;*****************************

(defVar *SIZE-OF-PATTERN* 3)
(defVar *OFF-INTERVALS-NUMBER* 2)
(defVar *AMOUNT-OF-DIFFERENCE* 2)
(defVar *UNIFICATION-THRESHOLD* 3)
(defVar *SIZE-OF-PATTERN-SAVE* 3)
(defVar *OFF-INTERVALS-NUMBER-SAVE* 2)
(defVar *AMOUNT-OF-DIFFERENCE-SAVE* 2)
(defVar *UNIFICATION-THRESHOLD-SAVE* 3)

;******************
;   Statistics    *
;******************

(defVar *NEWEST-VALUE* ())
(defVar *MY-INTERVAL* ())
(defVar *BETWEEN* 'interval)
(defVar *MY-CLASS* ())
(defVar *GENERALIZED-INTERVALS*
  '((0 0)(1 2)(2 2)(3 3)(4 3)(5 4)(6 4)(7 5)(8 6)(9 6)
    (10 7)(11 7)))
(defVar *NEW-BAR-MUSIC* ())
(defVar *BASE* 2)
;(defVar *DOWNBEAT* 'downbeat)
(defVar *WEIGHTS* () "the current weights")
(defVar *WEIGHT-LISTS* () "container for weights")
(defVar *NOTE-LISTS* () "container for note-lists")
(defVar *ADD-WEIGHTS* () "the menu variable")
(defVar *SUBTRACT-WEIGHTS* () "the menu variable")
(defVar *VALUES* () "a container for the results of the analysis")
(defVar *SETTINGS* () "a container for the settings for the rectangles in the chart")
(defVar *BEAT-SIZE* 1000 "size of the beat variable")
(defVar *POSITIONS* () "a container for the positions of the bars in the chart")
(defVar *SPEAC* () "the speac container")
(defVar *COLLAPSE* 1 "the level of right-hand collapse of a chart")
(defVar *DIMENSION* 1)
(defVar *RATE-TYPE* 'pitch)
(defVar *CHOICE* 'pitch)
(defVar *THE-SCATTER-TEST* ())
(defVar *COLUMN-INFO* ())
(defVar *LAST-VERTICAL* ())
(defVar *LAST-HORIZONTAL* ())
(defVar X-PLACE 0)
(defVar N-PLACE 10)
(defVar *LIMIT-NUMBER* 3)
(defVar *ACTIVE-CHANNELS* ())
(defVar *FACTOR* 2)
(defVar *FACTOR1* 140)
(defVar *NUMBER* ())
(defVar *TEST1* ())
(defVar *CHOICE2* ())
(defVar *INTERVALS* ())
(defVar *TEXTURES* ())
(defVar *MY-POINT* ())
(defVar *CHANNEL-CHOICE* ())
(defVar *LAST-VALUE* ())

;**********************
;   Form Variables    *
;**********************

(defVar *LEVELS* ()
  "Data here to show the form of this variable.
   Note that the last element of each part of bottom line are beat numbers.")
(defVar *FORM-CONNECTIONS* '((1 5)(1 2)(5 6)(3 4))
  "Data here to show the form of this variable.")
(defVar *REVISED-LEVELS* ())
(defVar *SIZE* 120 "This variable makes the graph grow or shrink.")
(defVar *F-NUMBER* 1)
(defVar *FORM-COMPOSITION* () "this puppy stores the new composition if form has taken effect.")
(defVar *WORKS* () "This is where the current work names are stored.")
(defVar *OUTPUT-WINDOW* () "This is where the output window is stored.")

;***************
;   Indexes    *
;***************

(defVar *LIST-OF-INDICES*
  '(charts speac-analysis statistics-chart
    compose access earmarks signature-program utilities reference midi-file-read
    play-midi-qt Alice-interface piano-roll windoids edit-window form-window
    scrolling-window signatures variables-window multi-page
    windows))

;*************************
;   Utility Variables    *
;*************************

(defVar NOTE ())
(defVar IT ())
(defVar GROUP ())
(defVar BOTTOM ())
(defVar TEST ())


(defVar *ALICE-SCORE* ())
(defVar *A-SCORE* ())
(defVar *ALICE-INITIALIZED* nil)
(defVar ALICE-PIPE-0 nil)
(defVar ALICE-PIPE-1 nil)
(defVar ALICE-PIPE-2 nil)
(defVar *ALICE-HIDDEN-SECTIONS* nil)
(defVar *ALICE-SCORE-SIZE* nil)
(defVar *OLD-ALICE-SCORE-SIZE* nil)
(defVar *ALICE-SYSTEM* nil)
(defVar *ALICE-STAFF* nil)
(defVar *ALICE-STAFF-DATA* nil)
(defVar *ALICE-PAGE* nil)
(defVar *ALICE-OBJECT* nil)
(defVar *ALICE-OWNING-OBJECT* nil)
(defVar *USER-NAME* "david")



